{"version":3,"sources":["store/nav/navActionTypes.js","store/initialState.js","store/dateRange/dateRangeActionTypes.js","store/toast/toastActionTypes.js","store/store.js","store/toast/toastReducers.js","store/dateRange/dateRangeReducers.js","store/nav/navReducers.js","store/nav/navHooks.js","components/AppHeader.js","config/theme.js","store/dateRange/dateRangeActionHooks.js","components/ClaimsDateRangeSelector.js","config/chatbot.js","components/Nav.js","config/claimStatuses.js","components/ClaimStatus.js","components/LabelValuePair.js","components/NoDataFound.js","components/SectionHeader.js","components/PageContainer.js","store/toast/toastHooks.js","components/ToastMessages.js","config/api.js","httpActions/claimsApi.js","utils/formatting.js","pages/claims/list/ClaimsList.js","config/poolIDs.js","components/PoolID.js","pages/claims/details/ClaimDetails.js","pages/claims/index.js","httpActions/policiesApi.js","pages/policies/details/PolicyDetails.js","pages/policies/index.js","pages/dashboard/DashboardWidget.js","config/autoClaimLabels.js","pages/dashboard/claimWidgets/ClaimStatusDistribution.js","pages/dashboard/claimWidgets/AutoClaimDistribution.js","pages/dashboard/claimWidgets/RecentClaims.js","httpActions/staffApi.js","components/DatePicker.js","pages/dashboard/staffWidgets/JobDistribution.js","pages/dashboard/Dashboard.js","pages/staff/list/StaffList.js","pages/staff/details/LeaveFormDialog.js","pages/staff/details/StaffDetails.js","pages/staff/index.js","pages/utility/index.js","App.js","serviceWorker.js","index.js"],"names":["dateTo","Date","nav","isOpen","toastMessages","dateRange","from","moment","subtract","toDate","to","store","createContext","initialState","Provider","StateProvider","children","useReducer","state","action","transformedState","type","ACTION_TYPES","message","messageType","toastReducers","dateRangeReducers","navReducers","dispatch","value","useNavActions","useContext","navIsOpen","get","setNavIsOpen","toggleNavOpen","useStyles","makeStyles","theme","root","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","rootNavOpen","marginLeft","width","enteringScreen","title","spacing","flexGrow","AppHeader","cssClasses","AppBar","position","className","Toolbar","IconButton","onClick","edge","SvgIcon","htmlColor","Typography","variant","useDateRangeActions","dateRangeFrom","dateRangeTo","setDateRange","ClaimsDateRangeSelector","dateRangeButtonRef","React","useRef","useState","dateRangeIsOpen","setDateRangeIsOpen","Button","color","ref","format","Popover","open","anchorEl","current","anchorOrigin","vertical","horizontal","transformOrigin","onClose","onChange","selection","startDate","endDate","showSelectionPreview","moveRangeOnFirstSelection","direction","months","ranges","key","chatbotUrl","window","CHATBOT_URL","closeIconContainer","display","alignItems","justifyContent","padding","height","paper","whiteSpace","overflowX","paperClosed","breakpoints","up","Nav","withRouter","history","Drawer","classes","ChevronLeft","Divider","List","Tooltip","ListItem","button","push","ListItemIcon","ListItemText","0","label","1","2","3","4","5","ClaimStatus","status","claimStatuses","fontWeight","LabelValuePair","Grid","item","md","NoDataFound","Box","flexDirection","marginTop","marginBottom","divider","bigTitle","fontSize","SectionHeader","actions","subsection","disableGutters","flexWrap","loadingContainer","pageContents","PageContainer","isLoading","CircularProgress","useToastMessageActions","addToastMessage","addSuccessMessage","addErrorMessage","addInfoMessage","clearToastMessages","error","backgroundColor","palette","main","info","success","ToastMessages","setIsOpen","useEffect","length","handleClose","map","index","Snackbar","autoHideDuration","SnackbarContent","apiHost","API_HOST","getClaims","dateFrom","limit","offset","axios","params","datefrom","hours","minutes","seconds","dateto","getClaim","claimNo","getAutoClaimDistribution","getClaimStatusDistribution","formatDate","date","formatMoney","amount","toLocaleString","tableContainer","maxHeight","overflow","paginationContainer","flexShrink","ClaimsList","setIsLoading","data","setData","dataTotalCount","setDataTotalCount","currentPage","setCurrentPage","reloadData","a","pageNumber","resp","total","columns","name","options","customBodyRender","sort","selectableRows","filter","search","print","download","viewColumns","pagination","responsive","Pagination","count","Math","ceil","page","evt","PoolID","poolID","poolIDs","ClaimDetails","useParams","container","PolicyNo","DateOcc","Status","AttachUrl","Rider","RefundAmount","AutoClaim","ClassificationReason","ClaimRemark","CopayAmount","ClaimItems","ClaimsPage","path","component","getPolicy","policyNo","PolicyDetails","CommencementDate","EffectiveDate","ExpiryDate","InsuredName","PremiumAmount","RiderPremiumAmount","ProductPlan","ProductCode","Description","style","PolicyBenefits","PoliciesPage","margin","header","paddingBottom","grey","contentsContainer","DashboardWidget","otherProps","Paper","pieContainer","alignContent","ClaimStatusDistribution","statusData","setStatusData","autoClaimData","setAutoClaimData","statuses","reduce","acc","entry","classificationTotals","Count","String","Object","values","_autoClaimData","forEach","autoClaimStatusKey","statusLabel","autoClaimLabels","console","aspect","nameKey","dataKey","isAnimationActive","outerRadius","strokeWidth","fill","innerRadius","payload","AutoClaimDistribution","autoClaimLabel","RecentClaims","elevation","getStaffList","getStaffAvailability","createLeave","staffId","startDateTime","endDateTime","post","StartDateTime","EndDateTime","updateLeave","leaveId","put","deleteLeave","delete","DatePicker","buttonRef","extendMoment","Moment","timelineContainer","namesContainer","paddingTop","paddingRight","borderRight","lineHeight","textOverflow","cursor","scheduleContainer","paddingLeft","hourTicks","hourTick","textAlign","round","content","scheduleBars","scheduleBar","border","minWidth","primary","JobDistribution","setDate","workHoursRange","range","staff","activities","TargettedDate","Leave","leave","leaveRange","intersection","intersect","leaveStartHour","start","leaveEndHour","end","i","toString","url","ID","Claims","claim","isFilled","poolId","MedicalClaim","ClaimNo","Name","Array","WORKING_HOUR_TO","val","hour","activity","renderActivityBar","widgets","column","Dashboard","sm","lg","StaffList","tableMeta","rowIndex","form","dateRangePickerContainer","otherControlsContainer","StaffID","IsAbsent","LeaveFormDialog","leaveSchedule","handleCancel","handleSubmitComplete","workingCopy","setWorkingCopy","updatePartialWorkingCopy","handleSubmit","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","minDate","staticRanges","inputRanges","currentStartDate","currentEndDate","orientation","flexItem","FormControl","FormControlLabel","control","Checkbox","checked","InputLabel","Select","parseInt","target","disabled","MenuItem","DialogActions","size","StaffDetails","leaveDialogIsOpen","setLeaveDialogIsOpen","currentEditingLeaveSchedule","setCurrentEditingLeaveSchedule","id","handleDeleteLeave","confirm","Pool1","Pool2","Add","LeaveSchedules","Delete","StaffPage","UtilityPage","claimCount","setClaimCount","handleCreateClaims","numToInsert","claims","Input","max","min","pageContainer","App","CssBaseline","Container","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c665cda3.chunk.js","sourcesContent":["export default {\r\n    SET_NAV_IS_OPEN: 'SET_NAV_IS_OPEN'\r\n  }","import moment from 'moment'\r\n\r\nconst dateTo = new Date()\r\nconst dateFrom = moment().subtract(2, 'weeks').toDate()\r\n\r\nexport default {\r\n    nav: {\r\n        isOpen: false\r\n    },\r\n    toastMessages: [],\r\n    dateRange: {\r\n        from: dateFrom,\r\n        to: dateTo\r\n    }\r\n};","export default {\r\n  SET_DATE_RANGE: 'SET_DATE_RANGE'\r\n}","export default {\r\n  ADD_TOAST_MESSAGE: 'ADD_TOAST_MESSAGE',\r\n  CLEAR_TOAST_MESSAGES: 'CLEAR_TOAST_MESSAGES'\r\n}","// store.js\r\nimport React, {createContext, useReducer} from 'react';\r\nimport initialState from './initialState'\r\nimport navReducers from './nav/navReducers'\r\nimport dateRangeReducers from './dateRange/dateRangeReducers'\r\nimport toastReducers from './toast/toastReducers'\r\n\r\nexport const store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nexport const StateProvider = ( { children } ) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    let transformedState = state\r\n    transformedState = navReducers(transformedState, action)\r\n    transformedState = dateRangeReducers(transformedState, action)\r\n    transformedState = toastReducers(transformedState, action)\r\n    \r\n    return transformedState\r\n  }, initialState)\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};","import ACTION_TYPES from './toastActionTypes'\r\nimport initialState from '../initialState'\r\n\r\nexport default (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case ACTION_TYPES.ADD_TOAST_MESSAGE:\r\n      return {\r\n        ...state,\r\n        toastMessages: [\r\n          ...state.toastMessages,\r\n          {\r\n            message: action.message,\r\n            messageType: action.messageType\r\n          }\r\n        ]\r\n      }\r\n\r\n    case ACTION_TYPES.CLEAR_TOAST_MESSAGES:\r\n      return {\r\n        ...state,\r\n        toastMessages: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import ACTION_TYPES from './dateRangeActionTypes'\r\nimport initialState from '../initialState'\r\n\r\nexport default (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case ACTION_TYPES.SET_DATE_RANGE:\r\n      return {\r\n        ...state,\r\n        dateRange: {\r\n          ...state.dateRange,\r\n          from: action.from,\r\n          to: action.to\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import ACTION_TYPES from './navActionTypes'\r\nimport initialState from '../initialState'\r\n\r\nexport default (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case ACTION_TYPES.SET_NAV_IS_OPEN:\r\n      return {\r\n        ...state,\r\n        nav: {\r\n          ...state.nav,\r\n          isOpen: action.isOpen\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { useContext } from 'react'\r\nimport { get } from 'lodash'\r\nimport ACTION_TYPES from './navActionTypes'\r\nimport { store } from '../store'\r\n\r\nexport const useNavActions = () => {\r\n  const {state, dispatch} = useContext(store)\r\n\r\n  const navIsOpen = get(state, 'nav.isOpen', false)\r\n\r\n  const setNavIsOpen = (isOpen) => {\r\n    dispatch({\r\n      type: ACTION_TYPES.SET_NAV_IS_OPEN,\r\n      isOpen: isOpen\r\n    })\r\n  }\r\n\r\n  const toggleNavOpen = () => {\r\n    dispatch({\r\n      type: ACTION_TYPES.SET_NAV_IS_OPEN,\r\n      isOpen: !state.nav.isOpen\r\n    })\r\n  }\r\n\r\n  return {\r\n    navIsOpen,\r\n    setNavIsOpen,\r\n    toggleNavOpen\r\n  }\r\n}","import React from 'react'\r\nimport { NAV_WIDTH } from '../config/theme'\r\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles, SvgIcon } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport { useNavActions } from '../store/nav/navHooks'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    })\r\n  },\r\n  rootNavOpen: {\r\n    marginLeft: NAV_WIDTH,\r\n    width: `calc(100% - ${NAV_WIDTH}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    })\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(5),\r\n    flexGrow: 1\r\n  }\r\n}))\r\n\r\nexport const AppHeader = () => {\r\n\r\n  const cssClasses = useStyles({})\r\n  const { navIsOpen, toggleNavOpen } = useNavActions()\r\n\r\n  return (\r\n    <AppBar position=\"absolute\" className={`${cssClasses.root} ${navIsOpen && cssClasses.rootNavOpen}`}>\r\n      <Toolbar>\r\n        <IconButton onClick={toggleNavOpen} edge=\"start\"><SvgIcon htmlColor=\"#ffffff\"><MenuIcon /></SvgIcon></IconButton>\r\n        <Typography variant=\"h6\" className={cssClasses.title}>Intelligent Claims Management System</Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}","export const NAV_WIDTH = 240","import { useContext } from 'react'\r\nimport { get } from 'lodash'\r\nimport ACTION_TYPES from './dateRangeActionTypes'\r\nimport { store } from '../store'\r\n\r\nexport const useDateRangeActions = () => {\r\n  const {state, dispatch} = useContext(store)\r\n\r\n  const dateRangeFrom = get(state, 'dateRange.from')\r\n  const dateRangeTo = get(state, 'dateRange.to')\r\n\r\n  const setDateRange = (from, to) => {\r\n    dispatch({\r\n      type: ACTION_TYPES.SET_DATE_RANGE,\r\n      from: from,\r\n      to: to\r\n    })\r\n  }\r\n\r\n  return {\r\n    dateRangeFrom,\r\n    dateRangeTo,\r\n    setDateRange\r\n  }\r\n}","import React from 'react'\r\nimport { Button, Popover } from '@material-ui/core'\r\nimport { useDateRangeActions } from '../store/dateRange/dateRangeActionHooks'\r\nimport moment from 'moment'\r\nimport 'react-date-range/dist/styles.css'\r\nimport 'react-date-range/dist/theme/default.css'\r\nimport { DateRangePicker } from 'react-date-range'\r\n\r\nexport const ClaimsDateRangeSelector = () => {\r\n\r\n  const { dateRangeFrom, dateRangeTo, setDateRange } = useDateRangeActions()\r\n  const dateRangeButtonRef = React.useRef(null)\r\n  const [dateRangeIsOpen, setDateRangeIsOpen] = React.useState(false)\r\n\r\n  const handleDateRangeChange = ({ selection }) => {\r\n    setDateRange(selection.startDate, selection.endDate)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" color=\"info\" ref={dateRangeButtonRef} onClick={()=>setDateRangeIsOpen(!dateRangeIsOpen)}>\r\n        {moment(dateRangeFrom).format('LL')} - {moment(dateRangeTo).format('LL')}\r\n      </Button>\r\n      <Popover \r\n        open={dateRangeIsOpen} \r\n        anchorEl={dateRangeButtonRef.current}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        onClose={()=>setDateRangeIsOpen(false)}\r\n      >\r\n        <DateRangePicker\r\n          onChange={handleDateRangeChange}\r\n          showSelectionPreview={true}\r\n          moveRangeOnFirstSelection={false}\r\n          direction=\"horizontal\"\r\n          months={2}\r\n          ranges={[{\r\n            startDate: dateRangeFrom,\r\n            endDate: dateRangeTo,\r\n            key: 'selection'\r\n          }]}\r\n        />\r\n      </Popover>\r\n    </>\r\n  )\r\n}","export const chatbotUrl = window.CHATBOT_URL || 'http://127.0.0.1:5001'","import React from 'react'\r\nimport { NAV_WIDTH } from '../config/theme'\r\nimport { chatbotUrl } from '../config/chatbot'\r\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, IconButton, makeStyles, Divider, Tooltip } from '@material-ui/core'\r\nimport { PieChart as DashboardIcon, People as StaffIcon, LocalAtm as ClaimsIcon, ChevronLeft as ChevronLeftIcon, Build as UtilityIcon, Sms as ChatbotIcon } from '@material-ui/icons'\r\nimport { useNavActions } from '../store/nav/navHooks'\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  closeIconContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    height: 63\r\n  },\r\n  paper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: NAV_WIDTH,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    overflowX: 'hidden'\r\n  },\r\n  paperClosed: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  }\r\n}))\r\n\r\nexport const Nav = withRouter(({ history }) => {\r\n\r\n  const cssClasses = useStyles()\r\n  const { navIsOpen, setNavIsOpen } = useNavActions()\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      open={navIsOpen}\r\n      classes={{\r\n        paper: `${cssClasses.paper} ${!navIsOpen? cssClasses.paperClosed : ''}`\r\n      }}\r\n    >\r\n      <div className={cssClasses.closeIconContainer}>\r\n        <IconButton onClick={() => setNavIsOpen(false)}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n\r\n      <Divider />\r\n\r\n      <List>\r\n        <Tooltip title=\"Dashboard\">\r\n          <ListItem button onClick={()=>history.push('/')}>\r\n            <ListItemIcon><DashboardIcon /></ListItemIcon>\r\n            <ListItemText>Dashboard</ListItemText>\r\n          </ListItem>\r\n        </Tooltip>\r\n\r\n        <Tooltip title=\"Claims\">\r\n          <ListItem button onClick={()=>history.push('/claims')}>\r\n            <ListItemIcon><ClaimsIcon /></ListItemIcon>\r\n            <ListItemText>Claims</ListItemText>\r\n          </ListItem>\r\n        </Tooltip>\r\n\r\n        <Tooltip title=\"Staff\">\r\n          <ListItem button onClick={()=>history.push('/staff')}>\r\n            <ListItemIcon><StaffIcon /></ListItemIcon>\r\n            <ListItemText>Staff</ListItemText>\r\n          </ListItem>\r\n        </Tooltip>\r\n\r\n        <Tooltip title=\"Utility\">\r\n          <ListItem button onClick={()=>history.push('/utility')}>\r\n            <ListItemIcon><UtilityIcon /></ListItemIcon>\r\n            <ListItemText>Utility</ListItemText>\r\n          </ListItem>\r\n        </Tooltip>\r\n\r\n      </List>\r\n      \r\n      <Divider />\r\n\r\n      <List>\r\n        <Tooltip title=\"Chatbot\">\r\n          <ListItem button onClick={()=>window.open(chatbotUrl)}>\r\n            <ListItemIcon><ChatbotIcon /></ListItemIcon>\r\n            <ListItemText>Chatbot</ListItemText>\r\n          </ListItem>\r\n        </Tooltip>\r\n      </List>\r\n    </Drawer>\r\n  )\r\n})","export default {\r\n  0: {\r\n    label: 'New',\r\n    color: '#000'\r\n  },\r\n  1: {\r\n    label: 'Pending',\r\n    color: '#4791db'\r\n  },\r\n  2: {\r\n    label: 'Approved',\r\n    color: '#81c784'\r\n  },\r\n  3: {\r\n    label: 'Settled',\r\n    color: '#64b5f6'\r\n  },\r\n  4: {\r\n    label: 'Rejected',\r\n    color: '#e57373'\r\n  },\r\n  5: {\r\n    label: 'Cancelled',\r\n    color: '#ffb74d'\r\n  }\r\n}","import React from 'react'\r\nimport claimStatuses from '../config/claimStatuses'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'inline-block',\r\n    color: ({color}) => color\r\n  }\r\n})\r\n\r\nexport const ClaimStatus = ({status}) => {\r\n  const { label='Unknown', color='#000' } = claimStatuses[status]\r\n  const cssClasses = useStyles({color: color})\r\n  \r\n  return (\r\n    <span className={cssClasses.root}>{label}</span>\r\n  )\r\n}","import React from 'react'\r\nimport { makeStyles, Typography, Grid } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1)\r\n  },\r\n  label: {\r\n  },\r\n  value: {\r\n    fontWeight: 'bold'\r\n  }\r\n}))\r\n\r\nexport const LabelValuePair = ({ label, value }) => {\r\n\r\n  const cssClasses = useStyles({})\r\n  return (\r\n    <Grid item md={3} className={cssClasses.root}>\r\n      <Typography variant=\"caption\" className={cssClasses.label}>{label}</Typography>\r\n      <Typography className={cssClasses.value}>{value}</Typography>\r\n    </Grid>\r\n  )\r\n}","import React from 'react'\r\nimport { Box } from '@material-ui/core'\r\n\r\nexport const NoDataFound = () => {\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n      <Box marginTop={10} marginBottom={10}>No data found. Try adjusting the search parameters.</Box>\r\n    </Box>\r\n  )\r\n}","import React from 'react'\r\nimport { makeStyles, Typography, Divider, Toolbar, Box } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  divider: {\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  bigTitle: {\r\n    fontSize: '1.5rem'\r\n  }\r\n}))\r\n\r\nexport const SectionHeader = ({title, actions=null, subsection=false}) => {\r\n  const cssClasses = useStyles({})\r\n\r\n  return (\r\n    <>\r\n      <Toolbar disableGutters={true}>\r\n        <Typography className={`${cssClasses.title} ${!subsection && cssClasses.bigTitle}`} variant=\"h6\">{title}</Typography>\r\n        <Box>\r\n          {actions}\r\n        </Box>\r\n      </Toolbar>\r\n      <Divider className={cssClasses.divider} />\r\n    </>\r\n  )\r\n\r\n}","import React from 'react'\r\nimport { Box, CircularProgress, Typography, Divider, makeStyles } from '@material-ui/core'\r\nimport { SectionHeader } from './SectionHeader'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexWrap: 'nowrap',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'stretch'\r\n  },\r\n  loadingContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: \"flex\", \r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  pageContents: {\r\n    flexGrow: 1\r\n  }\r\n}))\r\n\r\nexport const PageContainer = ({title, isLoading=false, actions=null, children}) => {\r\n  const cssClasses = useStyles({})\r\n\r\n  return (\r\n    <Box className={cssClasses.root}>\r\n      <SectionHeader \r\n        title={title}\r\n        actions={actions}\r\n      />\r\n      <Box className={cssClasses.pageContents}>\r\n        {isLoading\r\n          ? <Box className={cssClasses.loadingContainer}><CircularProgress /></Box>\r\n          : children\r\n        }\r\n      </Box>\r\n    </Box>\r\n  )\r\n\r\n}","import { useContext } from 'react'\r\nimport ACTION_TYPES from './toastActionTypes'\r\nimport { store } from '../store'\r\n\r\nexport const useToastMessageActions = () => {\r\n  const {state, dispatch} = useContext(store)\r\n  const toastMessages = state.toastMessages\r\n\r\n  const addToastMessage = (message, messageType) => {\r\n    dispatch({\r\n      type: ACTION_TYPES.ADD_TOAST_MESSAGE,\r\n      message: message,\r\n      messageType: messageType\r\n    })\r\n  }\r\n\r\n  const addSuccessMessage = (message) => {\r\n    addToastMessage(message, 'success')\r\n  }\r\n\r\n  const addErrorMessage = (message) => {\r\n    addToastMessage(message, 'error')\r\n  }\r\n\r\n  const addInfoMessage = (message) => {\r\n    addToastMessage(message, 'info')\r\n  }\r\n\r\n  const clearToastMessages = () => {\r\n    dispatch({\r\n      type: ACTION_TYPES.CLEAR_TOAST_MESSAGES\r\n    })\r\n  }\r\n\r\n  return {\r\n    toastMessages,\r\n    addToastMessage,\r\n    addSuccessMessage,\r\n    addErrorMessage,\r\n    addInfoMessage,\r\n    clearToastMessages\r\n  }\r\n}","import React from 'react'\r\nimport { Snackbar, SnackbarContent, makeStyles } from '@material-ui/core'\r\nimport { useToastMessageActions } from '../store/toast/toastHooks'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  error: {\r\n    backgroundColor: theme.palette.error.main\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.info.main,\r\n  },\r\n  success: {\r\n    backgroundColor: theme.palette.success.main\r\n  }\r\n}))\r\n\r\nexport function ToastMessages() {\r\n\r\n  const cssClasses = useStyles({})\r\n  const { toastMessages, clearToastMessages } = useToastMessageActions()\r\n  const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    if (toastMessages.length > 0) {\r\n      setIsOpen(true)\r\n    }\r\n  }, [toastMessages])\r\n\r\n  const handleClose = () => {\r\n    clearToastMessages()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {toastMessages.map(({message, messageType}, index) => (\r\n        <Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose} key={index}>\r\n          <SnackbarContent \r\n            className={`${cssClasses[messageType]}`}\r\n            message={message} \r\n          />\r\n        </Snackbar>\r\n      ))}\r\n    </>\r\n  )\r\n}","export const apiHost = window.API_HOST || 'http://127.0.0.1:8081'","import axios from 'axios'\r\nimport moment from 'moment'\r\nimport { apiHost } from '../config/api'\r\n\r\nexport function getClaims(dateFrom=new Date(), dateTo=new Date(), limit=100, offset=0) {    \r\n  return axios.get(`${apiHost}/medicalclaim`, {\r\n    params: {\r\n      datefrom: moment(dateFrom).hours(0).minutes(0).seconds(0).toDate(),\r\n      dateto: moment(dateTo).hours(23).minutes(59).seconds(59).toDate(),\r\n      limit: limit,\r\n      offset: offset\r\n    }\r\n  })\r\n}\r\n\r\nexport function getClaim(claimNo) {    \r\n  return axios.get(`${apiHost}/medicalclaim/${claimNo}`)\r\n}\r\n\r\nexport function getAutoClaimDistribution(dateFrom=new Date(), dateTo=new Date()) {    \r\n  return axios.get(`${apiHost}/medicalclaim/autoclaimdistribution`, {\r\n    params: {\r\n      datefrom: moment(dateFrom).hours(0).minutes(0).seconds(0).toDate(),\r\n      dateto: moment(dateTo).hours(23).minutes(59).seconds(59).toDate()\r\n    }\r\n  })\r\n}\r\n\r\nexport function getClaimStatusDistribution(dateFrom=new Date(), dateTo=new Date()) {    \r\n  return axios.get(`${apiHost}/medicalclaim/statusdistribution`, {\r\n    params: {\r\n      datefrom: moment(dateFrom).hours(0).minutes(0).seconds(0).toDate(),\r\n      dateto: moment(dateTo).hours(23).minutes(59).seconds(59).toDate()\r\n    }\r\n  })\r\n}\r\n\r\nexport function bulkInsertClaims(numToInsert) {    \r\n  return axios.post(`${apiHost}/medicalclaim/bulk-insert`, {\r\n    numToInsert\r\n  })\r\n}","import moment from 'moment'\r\n\r\nexport const formatDate = (date) => {\r\n  return moment(date).format('LLL')\r\n}\r\n\r\nexport const formatMoney = (amount) => {\r\n  return '$' + (amount).toLocaleString()\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { Button, makeStyles, Box } from '@material-ui/core'\r\nimport { PageContainer } from '../../../components/PageContainer'\r\nimport MUIDataTable from \"mui-datatables\"\r\nimport { getClaims } from '../../../httpActions/claimsApi'\r\nimport { useDateRangeActions } from '../../../store/dateRange/dateRangeActionHooks'\r\nimport { useToastMessageActions } from '../../../store/toast/toastHooks'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { ClaimStatus } from '../../../components/ClaimStatus'\r\nimport { formatDate, formatMoney } from '../../../utils/formatting'\r\nimport { ClaimsDateRangeSelector } from '../../../components';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'stretch'\r\n  },\r\n  tableContainer: {\r\n    flexGrow: 1,\r\n    maxHeight: 'calc(100vh - 300px)',\r\n    overflow: 'auto'\r\n  },\r\n  paginationContainer: {\r\n    flexGrow: 0,\r\n    flexShrink: 1,\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}))\r\n\r\nexport const ClaimsList = withRouter(({ history }) => {\r\n\r\n  const rowsPerPage = 10\r\n  const cssClasses = useStyles({})\r\n  const { addErrorMessage } = useToastMessageActions()\r\n  const { dateRangeFrom, dateRangeTo } = useDateRangeActions()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [data, setData] = useState([])\r\n  const [dataTotalCount, setDataTotalCount] = useState(0)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    reloadData(1)\r\n  }, [dateRangeFrom, dateRangeTo])\r\n\r\n  const reloadData = async (pageNumber=1) => {\r\n    const offset = (pageNumber-1) * rowsPerPage\r\n\r\n    try {\r\n      setIsLoading(true)\r\n      const resp = await getClaims(dateRangeFrom, dateRangeTo, rowsPerPage, offset)\r\n      setCurrentPage(pageNumber)\r\n      setDataTotalCount(resp.data.total)\r\n      setData(resp.data.data)\r\n    } catch (e) {\r\n      addErrorMessage('Error loading claims')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handlePaginationChange = (evt, pageNumber) => {\r\n    reloadData(pageNumber)\r\n  }\r\n\r\n  return (\r\n    <PageContainer \r\n      title=\"Claims\" \r\n      isLoading={isLoading}\r\n      actions={<ClaimsDateRangeSelector />}\r\n    >\r\n      <Box className={cssClasses.root}>\r\n        {/* TABLE */}\r\n        <Box className={cssClasses.tableContainer}>\r\n          <MUIDataTable\r\n            data={data}\r\n            columns={[{\r\n              name: 'ClaimNo',\r\n              label: 'Claim No',\r\n              options: {\r\n                customBodyRender: (value) => <Button color=\"primary\" onClick={() => history.push(`/claims/details/${value}`)}>{value}</Button>,\r\n                sort: false\r\n              }\r\n            }, {\r\n              name: 'PolicyNo',\r\n              label: 'Policy No',\r\n              options: {\r\n                customBodyRender: (value) => <Button color=\"primary\" onClick={() => history.push(`/policies/details/${value}`)}>{value}</Button>,\r\n                sort: false\r\n              }\r\n            }, {\r\n              name: 'Status',\r\n              label: 'Status',\r\n              options: {\r\n                customBodyRender: (value) => <ClaimStatus status={value} />,\r\n                sort: false\r\n              }\r\n            }, {\r\n              name: 'DateOcc',\r\n              label: 'Submission Date',\r\n              options: {\r\n                customBodyRender: (value) => formatDate(value),\r\n                sort: false\r\n              }\r\n            }, {\r\n              name: 'RefundAmount',\r\n              label: 'Refund Amt',\r\n              options: {\r\n                customBodyRender: (value) => formatMoney(value),\r\n                sort: false\r\n              }\r\n            }, {\r\n              name: 'ClaimNo',\r\n              label: 'Actions',\r\n              options: {\r\n              customBodyRender: (value) => (<Button color=\"primary\" variant=\"contained\" onClick={()=>history.push(`/claims/details/${value}`)}>View Details</Button>)\r\n              }\r\n            }]}\r\n            options={{\r\n              selectableRows: 'none',\r\n              filter: false,\r\n              search: false,\r\n              print: false,\r\n              download: false,\r\n              viewColumns: false,\r\n              pagination: false,\r\n              responsive: 'scrollFullHeight'\r\n            }}\r\n          />\r\n        </Box>\r\n        {/* END TABLE */}\r\n        <Box className={cssClasses.paginationContainer}>\r\n          <Pagination \r\n            count={Math.ceil(dataTotalCount / rowsPerPage)}\r\n            page={currentPage}\r\n            color=\"primary\"\r\n            onChange={handlePaginationChange}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </PageContainer>\r\n  )\r\n})","export default {\r\n  1: {\r\n    color: '#115293'\r\n  },\r\n  2: {\r\n    color: '#9a0036'\r\n  },\r\n  3: {\r\n    color: '#d32f2f'\r\n  },\r\n  4: {\r\n    color: '#f57c00'\r\n  }\r\n}","import React from 'react'\r\nimport { get } from 'lodash'\r\nimport poolIDs from '../config/poolIDs'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'inline-block',\r\n    color: ({color}) => color\r\n  }\r\n})\r\n\r\nexport const PoolID = ({poolID}) => {\r\n  const color = get(poolIDs, `${poolID}.color`, '#000')\r\n  const cssClasses = useStyles({color: color})\r\n  \r\n  return (\r\n    <span className={cssClasses.root}>{poolID}</span>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { get } from 'lodash'\r\nimport { Button, Grid, Typography, Divider, Box } from '@material-ui/core'\r\nimport { PageContainer, LabelValuePair, SectionHeader } from '../../../components'\r\nimport { useToastMessageActions } from '../../../store/toast/toastHooks'\r\nimport { withRouter, useParams } from 'react-router-dom'\r\nimport { ClaimStatus } from '../../../components/ClaimStatus'\r\nimport { formatDate, formatMoney } from '../../../utils/formatting'\r\nimport { getClaim } from '../../../httpActions/claimsApi'\r\nimport MUIDataTable from 'mui-datatables'\r\nimport { PoolID } from '../../../components/PoolID'\r\n\r\nexport const ClaimDetails = withRouter(({ history }) => {\r\n\r\n  const { addErrorMessage } = useToastMessageActions()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [data, setData] = useState(null)\r\n  const { claimNo } = useParams()  \r\n\r\n  useEffect(() => {\r\n    reloadData()\r\n  }, [claimNo])\r\n\r\n  const reloadData = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      const resp = await getClaim(claimNo)\r\n      setData(resp.data)\r\n    } catch (e) {\r\n      addErrorMessage('Error loading claim')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PageContainer \r\n      title={`Claim No: ${claimNo}`}\r\n      isLoading={isLoading}\r\n    >\r\n      {!!data &&\r\n        <>\r\n        <Grid container>\r\n          <LabelValuePair label=\"Policy No\" value={\r\n            <Box onClick={()=>history.push(`/policies/details/${data.PolicyNo}`)}>{data.PolicyNo}</Box>\r\n          } />\r\n          <LabelValuePair label=\"Date Occ\" value={formatDate(data.DateOcc)} />\r\n          <LabelValuePair label=\"Status\" value={<ClaimStatus status={data.Status} />} />\r\n          <LabelValuePair label=\"Bill Document\" value={!!data.AttachUrl? <Box onClick={()=>window.open(data.AttachUrl)}>View Document</Box> : '-'} />\r\n          <LabelValuePair label=\"Rider\" value={data.Rider} />\r\n          <LabelValuePair label=\"Refund Amount\" value={formatMoney(data.RefundAmount)} />\r\n          <LabelValuePair label=\"Auto Claim\" value={data.AutoClaim? 'Y' : 'N'} />\r\n          <LabelValuePair label=\"Classification Reason\" value={data.ClassificationReason} />\r\n          <LabelValuePair label=\"Remark\" value={data.ClaimRemark} />\r\n          <LabelValuePair label=\"CoPay\" value={formatMoney(data.CopayAmount)} />\r\n          <LabelValuePair label=\"Pool ID\" value={(!!data.PoolID)? <PoolID poolID={data.PoolID} /> : '-'} />\r\n          \r\n        </Grid>\r\n        <br /><br />\r\n        <SectionHeader \r\n          title=\"Medical Panel\"\r\n          subsection\r\n        />\r\n        <Grid container>\r\n          <LabelValuePair label=\"Medical Panel Reg No\" value={get(data, 'MedicalPanel.RegistrationNo', '-')} />\r\n          <LabelValuePair label=\"Medical Panel Name\" value={get(data, 'MedicalPanel.SpecialistName', '-')} />\r\n          <LabelValuePair label=\"Medical Panel Specialty\" value={get(data, 'MedicalPanel.Specialty', '-')} />\r\n          <LabelValuePair label=\"Medical Panel Blacklisted?\" value={!!get(data, 'MedicalPanel.BlacklistReasonID', null)? 'Y' : 'N'} />\r\n        </Grid>\r\n        <br /><br />\r\n        <SectionHeader \r\n          title=\"Claim Items\"\r\n          subsection\r\n        />\r\n        <MUIDataTable\r\n            data={data.ClaimItems}\r\n            columns={[{\r\n              name: 'ID',\r\n              label: 'ID'\r\n            }, {\r\n              name: 'ItemDesc',\r\n              label: 'Description'\r\n            }, {\r\n              name: 'BenefitCode',\r\n              label: 'Benefit Code'\r\n            }, {\r\n              name: 'Qty',\r\n              label: 'Qty'\r\n            }, {\r\n              name: 'Amount',\r\n              label: 'Amount',\r\n              options: {\r\n                customBodyRender: (value) => formatMoney(value)\r\n              }\r\n            }]}\r\n            options={{\r\n              selectableRows: 'none',\r\n              filter: false,\r\n              search: false,\r\n              print: false,\r\n              download: false,\r\n              viewColumns: false,\r\n              pagination: false,\r\n              responsive: 'scrollMaxHeight'\r\n            }}\r\n          />\r\n        </>\r\n      }\r\n    </PageContainer>\r\n  )\r\n})","import React from 'react'\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport { ClaimsList } from './list/ClaimsList'\r\nimport { ClaimDetails } from './details/ClaimDetails'\r\n\r\nexport const ClaimsPage = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/claims/details/:claimNo\" component={ClaimDetails} />\r\n      <Route component={ClaimsList} />\r\n    </Switch>\r\n  )\r\n}","import axios from 'axios'\r\nimport { apiHost } from '../config/api'\r\n\r\nexport function getPolicies(limit=100, offset=0) {    \r\n  return axios.get(`${apiHost}/healthpolicy?limit=${limit}&offset=${offset}`)\r\n}\r\n\r\nexport function getPolicy(policyNo) {    \r\n  return axios.get(`${apiHost}/healthpolicy/${policyNo}`)\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Grid, Typography, Divider, Box } from '@material-ui/core'\r\nimport { PageContainer, LabelValuePair } from '../../../components'\r\nimport { useToastMessageActions } from '../../../store/toast/toastHooks'\r\nimport { withRouter, useParams } from 'react-router-dom'\r\nimport { formatDate, formatMoney } from '../../../utils/formatting'\r\nimport { getPolicy } from '../../../httpActions/policiesApi'\r\nimport MUIDataTable from 'mui-datatables'\r\n\r\nexport const PolicyDetails = withRouter(({ history }) => {\r\n\r\n  const { addErrorMessage } = useToastMessageActions()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [data, setData] = useState(null)\r\n  const { policyNo } = useParams()  \r\n\r\n  useEffect(() => {\r\n    reloadData()\r\n  }, [policyNo])\r\n\r\n  const reloadData = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      const resp = await getPolicy(policyNo)\r\n      setData(resp.data)\r\n    } catch (e) {\r\n      addErrorMessage('Error loading claim')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PageContainer \r\n      title={`Policy No: ${policyNo}`}\r\n      isLoading={isLoading}\r\n    >\r\n      {!!data &&\r\n        <>\r\n          <Grid container>\r\n            <LabelValuePair label=\"Commencement Date\" value={formatDate(data.CommencementDate)} />\r\n            <LabelValuePair label=\"Effective Date\" value={formatDate(data.EffectiveDate)} />\r\n            <LabelValuePair label=\"Expiry Date\" value={formatDate(data.ExpiryDate)} />\r\n            <LabelValuePair label=\"Insured Name\" value={data.InsuredName} />\r\n            <LabelValuePair label=\"Premium Amount\" value={formatMoney(data.PremiumAmount)} />\r\n            <LabelValuePair label=\"Rider Premium Amount\" value={formatMoney(data.RiderPremiumAmount)} />\r\n            <LabelValuePair label=\"Product Code\" value={data.ProductPlan.ProductCode} />\r\n            <LabelValuePair label=\"Description\" value={data.ProductPlan.Description} />\r\n          </Grid>\r\n\r\n          <br /><br />\r\n          <Typography variant=\"h6\">Product Benefits</Typography>\r\n          <Divider style={{marginTop: 10, marginBottom: 30}} />\r\n\r\n          <Box>\r\n            <MUIDataTable\r\n              data={data.ProductPlan.PolicyBenefits}\r\n              columns={[{\r\n                name: 'BenefitCode',\r\n                label: 'Benefit Code'\r\n              }, {\r\n                name: 'Description',\r\n                label: 'Description'\r\n              }, {\r\n                name: 'BenefitLimit',\r\n                label: 'Benefit Limit',\r\n                options: {\r\n                  customBodyRender: (value) => formatMoney(value)\r\n                }\r\n              }]}\r\n              options={{\r\n                selectableRows: 'none',\r\n                filter: false,\r\n                search: false,\r\n                print: false,\r\n                download: false,\r\n                viewColumns: false,\r\n                pagination: false,\r\n                responsive: 'scrollMaxHeight'\r\n              }}\r\n            />\r\n          </Box>\r\n        </>\r\n      }\r\n    </PageContainer>\r\n  )\r\n})","import React from 'react'\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport { PolicyDetails } from './details/PolicyDetails'\r\n\r\nexport const PoliciesPage = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/policies/details/:policyNo\" component={PolicyDetails} />\r\n    </Switch>\r\n  )\r\n}","import React from 'react'\r\nimport { Paper, Typography, makeStyles, CircularProgress } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    flexGrow: 1,\r\n    margin: theme.spacing(1),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'stretch'\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'stretch',\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  title: {\r\n    color: theme.palette.grey[600],\r\n    fontWeight: 'normal',\r\n    fontSize: '1rem',\r\n    flexGrow: 1\r\n  },\r\n  actions: {\r\n    \r\n  },\r\n  contentsContainer: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n}))\r\n\r\nexport const DashboardWidget = ({ children, isLoading=false, className='', title, action=null, ...otherProps }) => {\r\n\r\n  const cssClasses = useStyles({})\r\n\r\n  return (\r\n    <Paper \r\n      {...otherProps}\r\n      className={`${className} ${cssClasses.root}`}\r\n    >\r\n      <div className={cssClasses.header}>\r\n        <Typography variant=\"h6\" className={cssClasses.title}>{title}</Typography>\r\n        {!!action && \r\n          <div className={cssClasses.action}>\r\n            {action}\r\n          </div>\r\n        }\r\n      </div>\r\n      \r\n      <div className={cssClasses.contentsContainer}>\r\n        {isLoading?\r\n          <CircularProgress />\r\n          : children\r\n        }\r\n      </div>\r\n    </Paper>\r\n  )\r\n}","export default {\r\n  \"false\": {\r\n    label: 'Needs human intervention',\r\n    color: '#9a0036'\r\n  },\r\n  \"true\": {\r\n    label: 'Machine classified',\r\n    color: '#388e3c'\r\n  },\r\n  \"null\": {\r\n    label: \"Pending classification\",\r\n    color: '#a8a8a8'\r\n  }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { get } from 'lodash'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { DashboardWidget } from '../DashboardWidget'\r\nimport { useDateRangeActions } from '../../../store/dateRange/dateRangeActionHooks'\r\nimport { PieChart, Pie, Legend, Tooltip, ResponsiveContainer, Cell } from 'recharts'\r\nimport { useToastMessageActions } from '../../../store/toast/toastHooks'\r\nimport { getClaimStatusDistribution } from '../../../httpActions/claimsApi'\r\nimport claimStatuses from '../../../config/claimStatuses'\r\nimport autoClaimLabels from '../../../config/autoClaimLabels'\r\nimport { NoDataFound } from '../../../components/NoDataFound'\r\n\r\nconst useStyles = makeStyles(()=>({\r\n  pieContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n}))\r\n\r\nexport const ClaimStatusDistribution = () => {\r\n\r\n  const cssClasses = useStyles({})\r\n  const [statusData, setStatusData] = useState([])\r\n  const [autoClaimData, setAutoClaimData] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { addErrorMessage } = useToastMessageActions()\r\n  const { dateRangeFrom, dateRangeTo } = useDateRangeActions()\r\n\r\n  useEffect(() => {\r\n    reloadData()\r\n  }, [dateRangeFrom, dateRangeTo])\r\n\r\n  const reloadData = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      const resp = await getClaimStatusDistribution(dateRangeFrom, dateRangeTo, 5, 0)\r\n\r\n      const statuses = resp.data.reduce((acc, entry) => {\r\n\r\n        if (!acc[entry.Status]) {\r\n          const status = claimStatuses[entry.Status]\r\n          acc[entry.Status] = {\r\n            label: !!status? status.label : 'Unknown',\r\n            color: !!status? status.color : '#000',\r\n            classificationTotals : {\r\n              'false': 0,\r\n              'true': 0,\r\n              'null': 0\r\n            },\r\n            total: 0\r\n          }\r\n        }\r\n\r\n        const count = entry.Count\r\n        acc[entry.Status].classificationTotals[String(entry.AutoClaim)] = count\r\n        acc[entry.Status].total += count\r\n        return acc\r\n\r\n      }, {})\r\n      setStatusData(Object.values(statuses))\r\n      const _autoClaimData = Object.values(statuses).reduce((acc, entry) => {\r\n        \r\n        ['false', 'true', 'null'].forEach(autoClaimStatusKey => {\r\n          const total = entry.classificationTotals[autoClaimStatusKey]\r\n          if (total > 0) {\r\n            acc.push({\r\n              statusLabel: entry.label,\r\n              label: `${entry.label} (${get(autoClaimLabels, `${autoClaimStatusKey}.label`, 'unknown')})`,\r\n              color: get(autoClaimLabels, `${autoClaimStatusKey}.color`, '#000'),\r\n              total: total\r\n            })\r\n          }\r\n        })\r\n\r\n        return acc\r\n      }, [])\r\n\r\n      setAutoClaimData(_autoClaimData)\r\n\r\n\r\n    } catch (e) {\r\n      console.error(e)\r\n      addErrorMessage('Error loading recent claims')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DashboardWidget title=\"Claim Status Distribution\" isLoading={isLoading}>\r\n      <div className={cssClasses.pieContainer}>\r\n        {statusData.length > 0\r\n          ? (\r\n            <ResponsiveContainer aspect={1} height='100%'>\r\n              <PieChart>\r\n                <Pie data={statusData} nameKey=\"label\" dataKey=\"total\" isAnimationActive={false} outerRadius=\"65%\" strokeWidth={0}>\r\n                  {statusData.map((entry, index) => <Cell key={index} fill={entry.color}/>)}\r\n                </Pie>\r\n                <Pie data={autoClaimData} nameKey=\"label\" dataKey=\"total\" isAnimationActive={false} innerRadius=\"70%\" outerRadius=\"80%\">\r\n                  {autoClaimData.map((entry, index) => <Cell key={`claimStatus-${index}`} fill={entry.color} />)}\r\n                </Pie>\r\n                <Tooltip />\r\n                <Legend \r\n                  payload={statusData.map(entry => ({\r\n                    type: 'square',\r\n                    value: entry.label,\r\n                    color: entry.color\r\n                  }))}\r\n                />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          )\r\n          : <NoDataFound />\r\n        }\r\n        \r\n      </div>\r\n    </DashboardWidget>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { DashboardWidget } from '../DashboardWidget'\r\nimport { useDateRangeActions } from '../../../store/dateRange/dateRangeActionHooks'\r\nimport { PieChart, Pie, Legend, Tooltip, ResponsiveContainer, Cell } from 'recharts'\r\nimport { useToastMessageActions } from '../../../store/toast/toastHooks'\r\nimport { getAutoClaimDistribution } from '../../../httpActions/claimsApi'\r\nimport autoClaimLabels from '../../../config/autoClaimLabels'\r\nimport { NoDataFound } from '../../../components/NoDataFound'\r\n\r\nconst useStyles = makeStyles(()=>({\r\n  pieContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n}))\r\n\r\nexport const AutoClaimDistribution = () => {\r\n\r\n  const cssClasses = useStyles({})\r\n  const [data, setData] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { addErrorMessage } = useToastMessageActions()\r\n  const { dateRangeFrom, dateRangeTo } = useDateRangeActions()\r\n\r\n  useEffect(() => {\r\n    reloadData()\r\n  }, [dateRangeFrom, dateRangeTo])\r\n\r\n  const reloadData = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      const resp = await getAutoClaimDistribution(dateRangeFrom, dateRangeTo, 5, 0)\r\n      setData(resp.data.map(entry => {\r\n        const autoClaimLabel = autoClaimLabels[String(entry.AutoClaim)]\r\n        return {\r\n          label: !!autoClaimLabel? autoClaimLabel.label : 'Unknown',\r\n          color: !!autoClaimLabel? autoClaimLabel.color : '#000',\r\n          total: entry.Count\r\n        }\r\n      }))\r\n    } catch (e) {\r\n      console.error(e)\r\n      addErrorMessage('Error loading recent claims')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DashboardWidget title=\"Machine vs Human Classification\" isLoading={isLoading}>\r\n      <div className={cssClasses.pieContainer}>\r\n        {data.length > 0\r\n          ? (\r\n            <ResponsiveContainer aspect={1} height='100%'>\r\n              <PieChart>\r\n                <Pie data={data} nameKey=\"label\" dataKey=\"total\" isAnimationActive={false} strokeWidth={0}>\r\n                  {data.map((entry, index) => <Cell key={index} fill={entry.color}/>)}\r\n                </Pie>\r\n                \r\n                <Tooltip />\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          )\r\n          : <NoDataFound />\r\n        }\r\n        \r\n      </div>\r\n    </DashboardWidget>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { DashboardWidget } from '../DashboardWidget'\r\nimport { useDateRangeActions } from '../../../store/dateRange/dateRangeActionHooks'\r\nimport { useToastMessageActions } from '../../../store/toast/toastHooks'\r\nimport { NoDataFound } from '../../../components/NoDataFound'\r\nimport { ClaimStatus } from '../../../components/ClaimStatus'\r\nimport { formatDate, formatMoney } from '../../../utils/formatting'\r\nimport MUIDataTable from \"mui-datatables\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { getClaims } from '../../../httpActions/claimsApi'\r\n\r\nexport const RecentClaims = withRouter(({history}) => {\r\n\r\n  const { addErrorMessage } = useToastMessageActions()\r\n  const { dateRangeFrom, dateRangeTo } = useDateRangeActions()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [data, setData] = useState([])\r\n\r\n  useEffect(() => {\r\n    reloadData()\r\n  }, [dateRangeFrom, dateRangeTo])\r\n\r\n  const reloadData = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      const resp = await getClaims(dateRangeFrom, dateRangeTo, 5, 0)\r\n      setData(resp.data.data)\r\n    } catch (e) {\r\n      addErrorMessage('Error loading recent claims')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n    \r\n  return (\r\n    <DashboardWidget title=\"Recent Claims\" isLoading={isLoading}>\r\n      <div style={{width: '100%'}}>\r\n        {(data.length > 0)\r\n          ? (\r\n            <MUIDataTable\r\n              data={data}\r\n              columns={[{\r\n                name: 'ClaimNo',\r\n                label: 'Claim No',\r\n                options: {\r\n                  customBodyRender: (value) => <Button color=\"primary\" onClick={() => history.push(`/claims/details/${value}`)}>{value}</Button>\r\n                }\r\n              }, {\r\n                name: 'PolicyNo',\r\n                label: 'Policy No',\r\n                options: {\r\n                  customBodyRender: (value) => <Button color=\"primary\" onClick={() => history.push(`/policies/details/${value}`)}>{value}</Button>\r\n                }\r\n              }, {\r\n                name: 'Status',\r\n                label: 'Status',\r\n                options: {\r\n                  customBodyRender: (value) => <ClaimStatus status={value} />\r\n                }\r\n              }, {\r\n                name: 'DateOcc',\r\n                label: 'Submission Date',\r\n                options: {\r\n                  customBodyRender: (value) => formatDate(value)\r\n                }\r\n              }, {\r\n                name: 'RefundAmount',\r\n                label: 'Refund Amt',\r\n                options: {\r\n                  customBodyRender: (value) => formatMoney(value)\r\n                }\r\n              }]}\r\n              options={{\r\n                elevation: 0,\r\n                selectableRows: 'none',\r\n                filter: false,\r\n                search: false,\r\n                print: false,\r\n                download: false,\r\n                viewColumns: false,\r\n                pagination: false\r\n              }}\r\n            />\r\n          )\r\n          : <NoDataFound />\r\n        }\r\n      </div>\r\n    </DashboardWidget>\r\n  )\r\n})","import axios from 'axios'\r\nimport { apiHost } from '../config/api'\r\nimport moment from 'moment'\r\n\r\nexport function getStaffList(limit=100, offset=0) {    \r\n  return axios.get(`${apiHost}/staff?limit=${limit}&offset=${offset}`)\r\n}\r\n\r\nexport function getStaffAvailability(date=new Date()) {    \r\n  return axios.get(`${apiHost}/staff/availability?date=${moment(date).format('YYYY-MM-DD')}&limit=10`)\r\n}\r\n\r\nexport function getStaffDetails(id) {    \r\n  return axios.get(`${apiHost}/staff/${id}`)\r\n}\r\n\r\nexport function createLeave(staffId, startDateTime, endDateTime) {    \r\n  return axios.post(`${apiHost}/staff/${staffId}/leave`, {\r\n    StartDateTime: startDateTime,\r\n    EndDateTime: endDateTime\r\n  })\r\n}\r\n\r\nexport function updateLeave(staffId, leaveId, startDateTime, endDateTime) {    \r\n  return axios.put(`${apiHost}/staff/${staffId}/leave/${leaveId}`, {\r\n    StartDateTime: startDateTime,\r\n    EndDateTime: endDateTime\r\n  })\r\n}\r\n\r\nexport function deleteLeave(staffId, leaveId) {    \r\n  return axios.delete(`${apiHost}/staff/${staffId}/leave/${leaveId}`)\r\n}","import React from 'react'\r\nimport { Button, Popover } from '@material-ui/core'\r\nimport { useDateRangeActions } from '../store/dateRange/dateRangeActionHooks'\r\nimport moment from 'moment'\r\nimport 'react-date-range/dist/styles.css'\r\nimport 'react-date-range/dist/theme/default.css'\r\nimport { Calendar } from 'react-date-range'\r\n\r\nexport const DatePicker = ({date, onChange}) => {\r\n\r\n  const buttonRef = React.useRef(null)\r\n  const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n  const handleDateChange = (date) => {\r\n    onChange(date)\r\n    setIsOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" color=\"info\" ref={buttonRef} onClick={()=>setIsOpen(!isOpen)}>\r\n        {moment(date).format('LL')}}\r\n      </Button>\r\n      <Popover \r\n        open={isOpen} \r\n        anchorEl={buttonRef.current}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        onClose={()=>setIsOpen(false)}\r\n      >\r\n        <Calendar\r\n          date={date}\r\n          onChange={handleDateChange}\r\n        />\r\n      </Popover>\r\n    </>\r\n  )\r\n}","import React, { useEffect } from 'react'\r\nimport { get } from 'lodash'\r\nimport { makeStyles, Box, Tooltip, Button } from '@material-ui/core'\r\nimport { DashboardWidget } from '../DashboardWidget'\r\nimport { useToastMessageActions } from '../../../store/toast/toastHooks'\r\nimport { getStaffAvailability } from '../../../httpActions/staffApi'\r\nimport Moment from 'moment'\r\nimport { extendMoment } from 'moment-range'\r\nimport { withRouter } from 'react-router-dom'\r\nimport poolIDs from '../../../config/poolIDs'\r\nimport { DatePicker } from '../../../components/DatePicker'\r\nconst moment = extendMoment(Moment)\r\n\r\nconst WORKING_HOUR_FROM = 9\r\nconst WORKING_HOUR_TO = 18\r\nconst HOUR_TICKS_HEIGHT = 20\r\nconst NAME_ROW_HEIGHT = 30\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  timelineContainer: {\r\n    marginTop: theme.spacing(2),\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'stretch',\r\n    alignContent: 'flex-start'\r\n  },\r\n  namesContainer: {\r\n    paddingTop: HOUR_TICKS_HEIGHT,\r\n    paddingRight: theme.spacing(3),\r\n    flexGrow: 0,\r\n    borderRight: `1px solid ${theme.palette.grey[500]}`\r\n  },\r\n  name: {\r\n    lineHeight: `${NAME_ROW_HEIGHT}px`,\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    marginBottom: theme.spacing(1),\r\n    cursor: 'pointer'\r\n  },\r\n  scheduleContainer: {\r\n    paddingLeft: theme.spacing(3),\r\n    flexGrow: 1\r\n  },\r\n  hourTicks: {\r\n    height: HOUR_TICKS_HEIGHT,\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'stretch',\r\n    alignContent: 'flex-end',\r\n    alignItems: 'flex-end'\r\n  },\r\n  hourTick: {\r\n    textAlign: 'left',\r\n    width: `${Math.round(100 / (WORKING_HOUR_TO - WORKING_HOUR_FROM))}%`,\r\n    flexGrow: 0,\r\n    fontSize: 12,\r\n    '&::after': {\r\n      content: '\"\"',\r\n      width: 1,\r\n      height: 10,\r\n      backgroundColor: 'rgba(0,0,0,0.5)',\r\n      display:'block',\r\n    }\r\n  },\r\n  scheduleBars: {\r\n    width: '100%',\r\n    height: NAME_ROW_HEIGHT,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'stretch',\r\n    alignItems: 'flex-stretch',\r\n    flexWrap: 'nowrap',\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  scheduleBar: {\r\n    width: `${Math.round(100 / (WORKING_HOUR_TO - WORKING_HOUR_FROM))}%`,\r\n    height: '100%',\r\n    flexGrow: 0,\r\n    backgroundColor: '#CCC',\r\n    border: '1px solid white',\r\n    padding: theme.spacing(0.5),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    minWidth: 0,\r\n    fontSize: 12,\r\n    '& > div': {\r\n      width: `100%`,\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n      whiteSpace: 'noWrap',\r\n      textAlign: 'center'\r\n    },\r\n\r\n    '&.leave': {\r\n      backgroundColor: theme.palette.grey[300]\r\n    },\r\n    '&.job': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: 'white',\r\n      cursor: 'pointer'\r\n    },\r\n    '&.empty': {\r\n      backgroundColor: theme.palette.grey[50]\r\n    }\r\n  }\r\n}))\r\n\r\nexport const JobDistribution = withRouter(({history}) => {\r\n\r\n  const { addErrorMessage } = useToastMessageActions()\r\n  const cssClasses = useStyles({})\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n  const [date, setDate] = React.useState(new Date())\r\n  const [data, setData] = React.useState([])\r\n\r\n  useEffect(() => {\r\n    reloadData()\r\n  }, [date])\r\n\r\n  const reloadData = async () => {\r\n    const workHoursRange = moment.range(moment(date).hours(WORKING_HOUR_FROM).minutes(0).seconds(0), moment(date).hours(WORKING_HOUR_TO).minutes(0).seconds(0))\r\n    try {\r\n      setIsLoading(true)\r\n      const resp = await getStaffAvailability(date)\r\n      setData(resp.data.data.map(staff => {\r\n\r\n        // populate leave\r\n        const activities = {}\r\n        staff.TargettedDate.Leave.forEach(leave => {\r\n          // find intersection of work day with\r\n          const leaveRange = moment.range(leave.StartDateTime, leave.EndDateTime)\r\n          const intersection = workHoursRange.intersect(leaveRange)\r\n          if (!!intersection) {\r\n            const leaveStartHour = intersection.start.hours()\r\n            const leaveEndHour = intersection.end.hours()\r\n            for (let i = leaveStartHour; i < leaveEndHour; i++) {\r\n              activities[i.toString()] = {\r\n                type: 'leave',\r\n                label: 'Leave',\r\n                url: `/staff/details/${staff.ID}`\r\n              }\r\n            } \r\n          }\r\n        })\r\n\r\n        // populate jobs\r\n        staff.TargettedDate.Claims.forEach(claim => {\r\n          let isFilled = false\r\n          for (let i = WORKING_HOUR_FROM; i < WORKING_HOUR_TO && !isFilled; i++) {\r\n            if (!activities[i.toString()]) {\r\n              activities[i.toString()] = {\r\n                type: 'job',\r\n                poolId: claim.MedicalClaim.PoolID,\r\n                label: `Pool: ${claim.MedicalClaim.PoolID}, Claim No: ${claim.ClaimNo}`,\r\n                url: `/claims/details/${claim.ClaimNo}`,\r\n                fill: get(poolIDs, `${claim.MedicalClaim.PoolID}.color`, '#000')\r\n              }\r\n              isFilled = true\r\n            }\r\n          }\r\n        })\r\n\r\n        // index activity by time\r\n        // const activities = Array(WORKING_HOUR_TO - WORKING_HOUR_FROM).fill(0).map(val, index => {\r\n        //   const hour = WORKING_HOUR_TO\r\n\r\n        // })\r\n\r\n        return {\r\n          Name: staff.Name,\r\n          ID: staff.ID,\r\n          activities: activities\r\n        }\r\n\r\n      }))\r\n\r\n    } catch (e) {\r\n      addErrorMessage(\"Error loading job distribution data\")\r\n      console.error(e)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const renderActivityBar = (staff, hour) => {\r\n    const activity = get(staff, `activities['${hour}']`, {})\r\n    const { type = '', label = '', poolId = '', url='/', fill } = activity\r\n\r\n    switch (type) {\r\n      case 'leave':\r\n        return (\r\n          <Tooltip title={label}>\r\n            <Box className={`${cssClasses.scheduleBar} leave`}>\r\n              <div>{label}</div>\r\n            </Box>\r\n          </Tooltip>\r\n        )\r\n      case 'job':\r\n        return (\r\n          <Tooltip title={label}>\r\n            <Box className={`${cssClasses.scheduleBar} ${poolId} job`} onClick={() => history.push(url)} style={{backgroundColor: fill}}>\r\n              <div>{label}</div>\r\n            </Box>\r\n          </Tooltip>\r\n        )\r\n      default:\r\n        return (\r\n          <Box className={`${cssClasses.scheduleBar} empty`}></Box>\r\n        )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DashboardWidget \r\n      title=\"Staff Load\" \r\n      isLoading={isLoading} \r\n      action={(\r\n        <DatePicker \r\n          date={date}\r\n          onChange={(date) => setDate(date)}\r\n        />\r\n      )}\r\n    >\r\n      <div className={cssClasses.timelineContainer}>\r\n        {/* NAMES */}\r\n        <Box className={cssClasses.namesContainer}>\r\n          {data.map((entry, index) => (\r\n            <Box className={cssClasses.name} key={index} onClick={() => history.push(`/staff/details/${entry.ID}`)}>\r\n              {entry.Name}\r\n            </Box>\r\n          ))}\r\n          \r\n        </Box>\r\n        {/* END NAMES */}\r\n\r\n        {/* SCHEDULES */}\r\n        <Box className={cssClasses.scheduleContainer}>\r\n          {/* HOUR TICKS */}\r\n          <Box className={cssClasses.hourTicks}>\r\n            {Array(WORKING_HOUR_TO - WORKING_HOUR_FROM).fill(0).map((val, index) => {\r\n              const hour = WORKING_HOUR_FROM + index\r\n              return <Box className={cssClasses.hourTick} key={index}>{moment().hours(hour).format('ha')}</Box>\r\n            })}\r\n          </Box>\r\n          {/* END HOUR TICKS */}\r\n\r\n          {/* SCHEDULE BARS */}\r\n            {data.map((staff, index) => (\r\n              <Box className={cssClasses.scheduleBars} key={index}>\r\n                {Array(WORKING_HOUR_TO - WORKING_HOUR_FROM).fill(0).map((val, index) => renderActivityBar(staff, WORKING_HOUR_FROM + index))}\r\n              </Box>\r\n            ))}\r\n          {/* END SCHEDULE BARS */}\r\n        </Box>\r\n        {/* END SCHEDULES */}\r\n      </div>\r\n    </DashboardWidget>\r\n  )\r\n})","import React from 'react'\r\nimport { makeStyles, Box, Typography, Divider, Grid } from '@material-ui/core'\r\nimport { ClaimStatusDistribution } from './claimWidgets/ClaimStatusDistribution'\r\nimport { AutoClaimDistribution } from './claimWidgets/AutoClaimDistribution'\r\nimport { RecentClaims } from './claimWidgets/RecentClaims'\r\nimport { JobDistribution } from './staffWidgets/JobDistribution'\r\nimport { SectionHeader, ClaimsDateRangeSelector } from '../../components'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  widgets: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'stretch',\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n\r\n  column: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '50%'\r\n  }\r\n}))\r\n\r\n\r\nexport const Dashboard = () => {\r\n\r\n  const cssClasses = useStyles({})\r\n\r\n  return (\r\n    <Box>\r\n      {/* CLAIMS */}\r\n      <SectionHeader \r\n        title=\"Claims\"\r\n        actions={<ClaimsDateRangeSelector />}\r\n      />\r\n      <Grid container>\r\n        <Grid item sm={12} md={6} lg={3}>\r\n          <AutoClaimDistribution />\r\n        </Grid>\r\n        <Grid item sm={12} md={6} lg={3}>\r\n          <ClaimStatusDistribution />\r\n        </Grid>\r\n        <Grid item sm={12} md={12} lg={6}>\r\n          <RecentClaims />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <br /><br />\r\n\r\n      {/* STAFF */}\r\n      <SectionHeader \r\n        title=\"Staff\"\r\n      />\r\n      <Grid container>\r\n        <Grid item md={12}>\r\n          <JobDistribution />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { Button, makeStyles, Box } from '@material-ui/core'\r\nimport { PageContainer } from '../../../components/PageContainer'\r\nimport MUIDataTable from \"mui-datatables\"\r\nimport { getStaffList } from '../../../httpActions/staffApi'\r\nimport { useToastMessageActions } from '../../../store/toast/toastHooks'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'stretch',\r\n    height: '100%'\r\n  },\r\n  tableContainer: {\r\n    flexGrow: 1,\r\n    maxHeight: 'calc(100vh - 300px)',\r\n    overflow: 'auto'\r\n  },\r\n  paginationContainer: {\r\n    flexGrow: 0,\r\n    flexShrink: 1,\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}))\r\n\r\nexport const StaffList = withRouter(({ history }) => {\r\n\r\n  const rowsPerPage = 10\r\n  const cssClasses = useStyles({})\r\n  const { addErrorMessage } = useToastMessageActions()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [data, setData] = useState([])\r\n  const [dataTotalCount, setDataTotalCount] = useState(0)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    reloadData(1)\r\n  }, [])\r\n\r\n  const reloadData = async (pageNumber=1) => {\r\n    const offset = (pageNumber-1) * rowsPerPage\r\n\r\n    try {\r\n      setIsLoading(true)\r\n      const resp = await getStaffList(rowsPerPage, offset)\r\n      setCurrentPage(pageNumber)\r\n      setDataTotalCount(resp.data.total)\r\n      setData(resp.data.data)\r\n    } catch (e) {\r\n      addErrorMessage('Error loading staff list')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handlePaginationChange = (evt, pageNumber) => {\r\n    reloadData(pageNumber)\r\n  }\r\n\r\n  return (\r\n    <PageContainer \r\n      title=\"Staff\" \r\n      isLoading={isLoading}\r\n    >\r\n      <Box className={cssClasses.root}>\r\n        {/* TABLE */}\r\n        <Box className={cssClasses.tableContainer}>\r\n          <MUIDataTable\r\n            data={data}\r\n            columns={[{\r\n              name: 'ID',\r\n              label: 'ID'\r\n            }, {\r\n              name: 'Name',\r\n              label: 'Name',\r\n              options: {\r\n              customBodyRender: (value, tableMeta) => (<Button color=\"primary\" onClick={()=>history.push(`/staff/details/${data[tableMeta.rowIndex].ID}`)}>{value}</Button>)\r\n              }\r\n            }, {\r\n              name: 'Pool1',\r\n              label: 'Pool1'\r\n            }, {\r\n              name: 'Pool2',\r\n              label: 'Pool2'\r\n            }, {\r\n              name: 'ID',\r\n              label: 'Actions',\r\n              options: {\r\n              customBodyRender: (value) => (<Button color=\"primary\" variant=\"contained\" onClick={()=>history.push(`/staff/details/${value}`)}>View Details</Button>)\r\n              }\r\n            }]}\r\n            options={{\r\n              selectableRows: 'none',\r\n              filter: false,\r\n              search: false,\r\n              print: false,\r\n              download: false,\r\n              viewColumns: false,\r\n              pagination: false,\r\n              responsive: 'scrollFullHeight'\r\n            }}\r\n          />\r\n        </Box>\r\n        {/* END TABLE */}\r\n        <Box className={cssClasses.paginationContainer}>\r\n          <Pagination \r\n            count={Math.ceil(dataTotalCount / rowsPerPage)}\r\n            page={currentPage}\r\n            color=\"primary\"\r\n            onChange={handlePaginationChange}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </PageContainer>\r\n  )\r\n})","import React, { useState, useEffect } from 'react'\r\nimport { get } from 'lodash'\r\nimport { Dialog, DialogTitle, DialogActions, DialogContent, CircularProgress, Typography, Button, FormControl, FormControlLabel, Checkbox, makeStyles, Box, Grid, Divider, Select, MenuItem, InputLabel } from '@material-ui/core'\r\nimport { updateLeave, createLeave } from '../../../httpActions/staffApi'\r\nimport { useToastMessageActions } from '../../../store/toast/toastHooks'\r\nimport { DateRangePicker } from 'react-date-range'\r\nimport moment from 'moment'\r\n\r\nconst useStyles = makeStyles ((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'stretch',\r\n    alignItems: 'stretch'\r\n  },\r\n  dateRangePickerContainer: {\r\n    paddingRight: theme.spacing(2),\r\n\r\n    '& .rdrDefinedRangesWrapper' : {\r\n      display: 'none'\r\n    }\r\n  },\r\n  otherControlsContainer: {\r\n    flexGrow: 1,\r\n    paddingLeft: theme.spacing(2)\r\n  }\r\n}))\r\n\r\nconst initialState = {\r\n  ID: null,\r\n  StaffID: null,\r\n  StartDateTime: moment().hours(9).minutes(0).seconds(0).toDate(),\r\n  EndDateTime: moment().hours(18).minutes(0).seconds(0).toDate(),\r\n  IsAbsent: false\r\n}\r\n\r\nexport const LeaveFormDialog = ({ \r\n  staffId, \r\n  leaveSchedule=null, \r\n  isOpen=false,\r\n  handleCancel,\r\n  handleSubmitComplete\r\n}) => {\r\n  \r\n  const cssClasses = useStyles({})\r\n  const { addSuccessMessage, addErrorMessage } = useToastMessageActions()\r\n  const [workingCopy, setWorkingCopy] = useState({\r\n    ...initialState,\r\n    StaffID: staffId,\r\n    ...(leaveSchedule || {})\r\n  })\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setWorkingCopy({\r\n        ...initialState,\r\n        StaffID: staffId,\r\n        ...(leaveSchedule || {})\r\n      })\r\n    }\r\n  }, [isOpen, leaveSchedule, staffId])\r\n\r\n  const updatePartialWorkingCopy = (data) => {\r\n    setWorkingCopy({\r\n      ...workingCopy,\r\n      ...data\r\n    })\r\n  }\r\n\r\n  const handleDateRangeChange = ({ selection }) => {\r\n\r\n    const { startDate, endDate } = selection\r\n    const currentStartDate = moment(workingCopy.StartDateTime)\r\n    const currentEndDate = moment(workingCopy.EndDateTime)\r\n\r\n    updatePartialWorkingCopy({\r\n      StartDateTime: moment(startDate).hours(currentStartDate.hours()).minutes(0).seconds(0).toDate(),\r\n      EndDateTime: moment(endDate).hours(currentEndDate.hours()).minutes(0).seconds(0).toDate()\r\n    })\r\n  }\r\n\r\n  const handleStartTimeChange = (evt) => {\r\n    updatePartialWorkingCopy({\r\n      StartDateTime: moment(workingCopy.StartDateTime).hours(parseInt(evt.target.value)).minutes(0).seconds(0).toDate()\r\n    })\r\n  }\r\n\r\n  const handleEndTimeChange = (evt) => {\r\n    updatePartialWorkingCopy({\r\n      EndDateTime: moment(workingCopy.EndDateTime).hours(parseInt(evt.target.value)).minutes(0).seconds(0).toDate()\r\n    })\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      if (workingCopy.ID) {\r\n        await updateLeave(staffId, workingCopy.ID, workingCopy.StartDateTime, workingCopy.EndDateTime)\r\n      } else {\r\n        await createLeave(staffId, workingCopy.StartDateTime, workingCopy.EndDateTime)\r\n      }\r\n      addSuccessMessage('Leave created')\r\n      handleSubmitComplete()\r\n    } catch (e) {\r\n      console.error(e)\r\n      addErrorMessage(get(e, 'response.data', 'Error saving leave. Please try again.'))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth={true} maxWidth=\"md\">\r\n      <DialogTitle>{!!workingCopy.ID? 'Update Leave' : 'New Leave'}</DialogTitle>\r\n      <DialogContent>\r\n        <Box className={cssClasses.form}>\r\n          {/* DATES */}\r\n          <Box className={cssClasses.dateRangePickerContainer}>\r\n            <DateRangePicker\r\n              minDate={new Date()}\r\n              staticRanges={[]}\r\n              inputRanges={[]}\r\n              direction=\"horizontal\"\r\n              onChange={handleDateRangeChange}\r\n              showSelectionPreview={true}\r\n              moveRangeOnFirstSelection={false}\r\n              months={2}\r\n              ranges={[{\r\n                startDate: moment(workingCopy.StartDateTime).toDate(),\r\n                endDate: moment(workingCopy.EndDateTime).toDate(),\r\n                key: 'selection'\r\n              }]}\r\n            />    \r\n          </Box>\r\n          {/* END DATES */}\r\n\r\n          <Divider orientation=\"vertical\" flexItem />\r\n\r\n          <Box className={cssClasses.otherControlsContainer}>\r\n            {/* FULL DAY LEAVE */}\r\n            <FormControl>\r\n              <FormControlLabel\r\n                label=\"Full day leave\"\r\n                control={(\r\n                  <Checkbox \r\n                    checked={workingCopy.IsAbsent}\r\n                    name=\"IsAbsent\"\r\n                    color=\"primary\"\r\n                    onChange={(evt, checked) => {\r\n                      updatePartialWorkingCopy({\r\n                        IsAbsent: checked\r\n                      })\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </FormControl>\r\n            {/* END FULL DAY LEAVE */}\r\n\r\n            <br /><br />\r\n\r\n            {/* START TIME */}\r\n            <FormControl fullWidth>\r\n              <InputLabel>Start Time</InputLabel>\r\n              <Select\r\n                name=\"fromTime\"\r\n                onChange={handleStartTimeChange}\r\n                value={moment(workingCopy.StartDateTime).hours()}\r\n                disabled={workingCopy.IsAbsent}\r\n              >\r\n                {[9,10,11,12,13,14,15,16,17,18].map((hour) => (\r\n                  <MenuItem value={hour}>{moment().hours(hour).minutes(0).format('h:mma')}</MenuItem>\r\n                ))}\r\n                \r\n              </Select>\r\n            </FormControl>\r\n            {/* END START TIME */}\r\n\r\n            <br /><br />\r\n\r\n            {/* END TIME */}\r\n            <FormControl fullWidth>\r\n              <InputLabel>End Time</InputLabel>\r\n              <Select\r\n                name=\"toTime\"\r\n                onChange={handleEndTimeChange}\r\n                value={moment(workingCopy.EndDateTime).hours()}\r\n                disabled={workingCopy.IsAbsent}\r\n              >\r\n                {[9,10,11,12,13,14,15,16,17,18].map((hour) => (\r\n                  <MenuItem value={hour}>{moment().hours(hour).minutes(0).format('h:mma')}</MenuItem>\r\n                ))}\r\n                \r\n              </Select>\r\n            </FormControl>\r\n            {/* END END TIME */}\r\n          </Box>\r\n        </Box>\r\n        \r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button color=\"info\" onClick={handleCancel}>Cancel</Button>\r\n        <Button color=\"primary\" disabled={isLoading} onClick={handleSubmit} variant=\"contained\">\r\n          Submit \r\n          {isLoading && <CircularProgress size={10} />}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Grid, Typography, Divider, IconButton, Tooltip } from '@material-ui/core'\r\nimport { PageContainer, LabelValuePair, SectionHeader } from '../../../components'\r\nimport { useToastMessageActions } from '../../../store/toast/toastHooks'\r\nimport { withRouter, useParams } from 'react-router-dom'\r\nimport { formatDate } from '../../../utils/formatting'\r\nimport { getStaffDetails, deleteLeave } from '../../../httpActions/staffApi'\r\nimport MUIDataTable from 'mui-datatables'\r\nimport { Add as AddIcon, Delete as DeleteIcon, Edit as EditIcon } from '@material-ui/icons'\r\nimport { LeaveFormDialog } from './LeaveFormDialog'\r\nimport { PoolID } from '../../../components/PoolID'\r\n\r\nexport const StaffDetails = withRouter(({ history }) => {\r\n\r\n  const { addErrorMessage } = useToastMessageActions()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [data, setData] = useState(null)\r\n  const [leaveDialogIsOpen, setLeaveDialogIsOpen] = useState(false)\r\n  const [currentEditingLeaveSchedule, setCurrentEditingLeaveSchedule] = useState(null)\r\n  const { staffId } = useParams()\r\n\r\n  useEffect(() => {\r\n    reloadData()\r\n  }, [staffId])\r\n\r\n  const reloadData = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      const resp = await getStaffDetails(staffId)\r\n      setData(resp.data)\r\n    } catch (e) {\r\n      addErrorMessage('Error loading staff details')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleCancelLeave = () => {\r\n    setLeaveDialogIsOpen(false)\r\n    setCurrentEditingLeaveSchedule(null)\r\n  }\r\n\r\n  const handleLeaveSubmitComplete = () => {\r\n    setLeaveDialogIsOpen(false)\r\n    setCurrentEditingLeaveSchedule(null)\r\n    reloadData()\r\n  }\r\n\r\n  const handleEditLeave = (leaveSchedule) => {\r\n    setLeaveDialogIsOpen(true)\r\n    setCurrentEditingLeaveSchedule(leaveSchedule)\r\n  }\r\n\r\n  const handleNewLeave = (leaveSchedule) => {\r\n    setLeaveDialogIsOpen(true)\r\n    setCurrentEditingLeaveSchedule(null)\r\n  }\r\n\r\n  const handleDeleteLeave = async (leaveId) => {\r\n\r\n    if (!window.confirm('Are you sure you wish to delete the leave?')) return\r\n\r\n    try {\r\n      await deleteLeave(data.ID, leaveId)\r\n      reloadData()\r\n    } catch (e) {\r\n      addErrorMessage(\"Error deleting leave. Please try again.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PageContainer \r\n      title={(!!data)? `${data.Name}`: 'Staff Details'}\r\n      isLoading={isLoading}\r\n    >\r\n      {!!data &&\r\n        <>\r\n          <Grid container>\r\n            <LabelValuePair label=\"ID\" value={data.ID} />\r\n            <LabelValuePair label=\"Name\" value={data.Name} />\r\n            <LabelValuePair label=\"Pool1\" value={<PoolID poolID={data.Pool1}/>} />\r\n            <LabelValuePair label=\"Pool2\" value={<PoolID poolID={data.Pool2}/>} />\r\n          </Grid>\r\n          <br /><br />\r\n          <SectionHeader \r\n            title={\r\n              <>\r\n                Leave Schedule \r\n                <Tooltip title=\"Add Leave\">\r\n                  <IconButton color=\"primary\" variant=\"contained\" onClick={handleNewLeave}><AddIcon /></IconButton>\r\n                </Tooltip>\r\n              </>\r\n            }\r\n            subsection\r\n          />\r\n          <MUIDataTable\r\n            data={data.LeaveSchedules}\r\n            columns={[{\r\n              name: 'ID',\r\n              label: 'ID'\r\n            },{\r\n              name: 'StartDateTime',\r\n              label: 'Start Date',\r\n              options: {\r\n                customBodyRender: (value) => formatDate(value)\r\n              }\r\n            }, {\r\n              name: 'EndDateTime',\r\n              label: 'End Date',\r\n              options: {\r\n                customBodyRender: (value) => formatDate(value)\r\n              }\r\n            }, {\r\n              name: 'ID',\r\n              label: 'Actions',\r\n              options: {\r\n                customBodyRender: (value, tableMeta) => (\r\n                  <>\r\n                    <Tooltip title=\"Delete leave\"><IconButton color=\"secondary\" onClick={() => handleDeleteLeave(value)}><DeleteIcon /></IconButton></Tooltip>\r\n                  </>\r\n                )\r\n              }\r\n            }]}\r\n            options={{\r\n              selectableRows: 'none',\r\n              filter: false,\r\n              search: false,\r\n              print: false,\r\n              download: false,\r\n              viewColumns: false,\r\n              pagination: false,\r\n              responsive: 'scrollMaxHeight'\r\n            }}\r\n          />\r\n          <LeaveFormDialog \r\n            isOpen={leaveDialogIsOpen}\r\n            staffId={data.ID}\r\n            handleCancel={handleCancelLeave}\r\n            handleSubmitComplete={handleLeaveSubmitComplete}\r\n            leaveSchedule={currentEditingLeaveSchedule}\r\n          />\r\n        </>\r\n      }\r\n    </PageContainer>\r\n  )\r\n})","import React from 'react'\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport { StaffList } from './list/StaffList'\r\nimport { StaffDetails } from './details/StaffDetails'\r\n\r\n\r\nexport const StaffPage = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/staff/details/:staffId\" component={StaffDetails} />\r\n      <Route component={StaffList} />\r\n    </Switch>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { PageContainer } from '../../components'\r\nimport { Button, FormControl, InputLabel, Input, CircularProgress } from '@material-ui/core'\r\nimport { bulkInsertClaims } from '../../httpActions/claimsApi'\r\nimport { useToastMessageActions } from '../../store/toast/toastHooks'\r\n\r\nexport const UtilityPage = () => {\r\n\r\n  const { addErrorMessage, addSuccessMessage } = useToastMessageActions()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [claimCount, setClaimCount] = useState(100)\r\n\r\n  const updateClaimCount = (evt) => {\r\n    let count = parseInt(!!evt.target.value? evt.target.value : 1)\r\n    count = Math.max(Math.min(count, 500), 1)\r\n    setClaimCount(count)\r\n  }\r\n\r\n  const handleCreateClaims = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      const resp = await bulkInsertClaims(claimCount)\r\n      addSuccessMessage(`${resp.data.claims.length} claims inserted`)\r\n    } catch (e) {\r\n      addErrorMessage('Error loading staff list')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PageContainer title=\"Utility Functions\">\r\n      Simulate bulk claim submissions by using the form below.\r\n      <br /><br />\r\n      <FormControl>\r\n        <InputLabel>No of Claims</InputLabel>\r\n        <Input \r\n          type=\"text\"\r\n          value={claimCount}\r\n          onChange={updateClaimCount}\r\n        />\r\n      </FormControl>\r\n      <br /><br />\r\n      <Button \r\n        color=\"primary\" \r\n        variant=\"contained\" \r\n        onClick={handleCreateClaims}\r\n        disabled={isLoading}\r\n      >\r\n        Create {claimCount} Claims\r\n        <CircularProgress size={10} />\r\n      </Button>\r\n    </PageContainer>\r\n  )\r\n}","import React from 'react';\nimport { CssBaseline, makeStyles, Container } from '@material-ui/core'\nimport { AppHeader, Nav } from './components'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { ClaimsPage } from './pages/claims'\nimport { PoliciesPage } from './pages/policies'\nimport { Dashboard } from './pages/dashboard/Dashboard'\nimport { StaffPage } from './pages/staff'\nimport { UtilityPage } from './pages/utility'\nimport { ToastMessages } from './components/ToastMessages'\nimport 'react-date-range/dist/styles.css'\nimport 'react-date-range/dist/theme/default.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  pageContainer: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n    padding: `100px ${theme.spacing(4)}px ${theme.spacing(4)}px ${theme.spacing(4)}px`\n  }\n}))\n\nfunction App() {\n\n  const cssClasses = useStyles({})\n\n  return (\n    <Router>\n      <div className={cssClasses.root}>\n        <CssBaseline />\n        <ToastMessages />\n        <AppHeader />\n        <Nav />\n        <Container maxWidth={false} className={cssClasses.pageContainer}>\n          <Switch>\n            <Route path=\"/claims\" component={ClaimsPage} />\n            <Route path=\"/policies\" component={PoliciesPage} />\n            <Route path=\"/staff\" component={StaffPage} />\n            <Route path=\"/utility\" component={UtilityPage} />\n            <Route component={Dashboard} />\n          </Switch>\n        </Container>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}